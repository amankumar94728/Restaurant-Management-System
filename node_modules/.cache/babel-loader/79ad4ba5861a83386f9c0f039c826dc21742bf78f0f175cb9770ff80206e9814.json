{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// ----------------------------------------------------------------------\n\nexport function useRouter() {\n  _s();\n  const navigate = useNavigate();\n  const router = useMemo(() => ({\n    back: () => navigate(-1),\n    forward: () => navigate(1),\n    reload: () => window.location.reload(),\n    push: href => navigate(href),\n    replace: href => navigate(href, {\n      replace: true\n    })\n  }), [navigate]);\n  return router;\n}\n_s(useRouter, \"AAuI0Q7BRHqU3t+vvk+lQ3xsnC4=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useMemo","useNavigate","useRouter","_s","navigate","router","back","forward","reload","window","location","push","href","replace"],"sources":["/Users/amankumar/Desktop/project04/src/components/admin/src/routes/hooks/use-router.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// ----------------------------------------------------------------------\n\nexport function useRouter() {\n  const navigate = useNavigate();\n\n  const router = useMemo(\n    () => ({\n      back: () => navigate(-1),\n      forward: () => navigate(1),\n      reload: () => window.location.reload(),\n      push: (href) => navigate(href),\n      replace: (href) => navigate(href, { replace: true }),\n    }),\n    [navigate]\n  );\n\n  return router;\n}\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;;AAEA,OAAO,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAE9B,MAAMI,MAAM,GAAGL,OAAO,CACpB,OAAO;IACLM,IAAI,EAAEA,CAAA,KAAMF,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxBG,OAAO,EAAEA,CAAA,KAAMH,QAAQ,CAAC,CAAC,CAAC;IAC1BI,MAAM,EAAEA,CAAA,KAAMC,MAAM,CAACC,QAAQ,CAACF,MAAM,CAAC,CAAC;IACtCG,IAAI,EAAGC,IAAI,IAAKR,QAAQ,CAACQ,IAAI,CAAC;IAC9BC,OAAO,EAAGD,IAAI,IAAKR,QAAQ,CAACQ,IAAI,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC;EACrD,CAAC,CAAC,EACF,CAACT,QAAQ,CACX,CAAC;EAED,OAAOC,MAAM;AACf;AAACF,EAAA,CAfeD,SAAS;EAAA,QACND,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}