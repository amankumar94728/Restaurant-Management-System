{"ast":null,"code":"var _jsxFileName = \"/Users/amankumar/Desktop/project04/src/components/restutrant/resturant_page/book_table.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookTablePage = () => {\n  _s();\n  const [availableSeats, setAvailableSeats] = useState(0);\n  const [tables, setTables] = useState([]);\n  useEffect(() => {\n    // Fetch available seats from your backend API\n    const fetchAvailableSeats = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/v1/tables/tables');\n        setTables(response.data); // Assuming the response data is an array of tables\n        setAvailableSeats(response.data.filter(table => table.status === 'available').length);\n      } catch (error) {\n        console.error('Error fetching available seats:', error);\n      }\n    };\n    fetchAvailableSeats();\n  }, []);\n  const handleBookSeat = async tableId => {\n    try {\n      // Send a request to book the selected seat\n      await axios.patch(`http://localhost:3001/api/v1/tables/tables/${tableId}`, {\n        status: 'reserved'\n      });\n      // Update availableSeats locally\n      setAvailableSeats(availableSeats => availableSeats - 1);\n    } catch (error) {\n      console.error('Error booking seat:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Available Seats: \", availableSeats]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tables.map(table => table.status === 'available' && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => handleBookSeat(table._id),\n        children: [\"Book Table \", table.tableNumber]\n      }, table._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(BookTablePage, \"zkitEzx+mYJksV2TerLr4a6fF44=\");\n_c = BookTablePage;\nexport default BookTablePage;\nvar _c;\n$RefreshReg$(_c, \"BookTablePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Button","jsxDEV","_jsxDEV","BookTablePage","_s","availableSeats","setAvailableSeats","tables","setTables","fetchAvailableSeats","response","get","data","filter","table","status","length","error","console","handleBookSeat","tableId","patch","children","fileName","_jsxFileName","lineNumber","columnNumber","map","variant","onClick","_id","tableNumber","_c","$RefreshReg$"],"sources":["/Users/amankumar/Desktop/project04/src/components/restutrant/resturant_page/book_table.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Button from '@mui/material/Button';\n\nconst BookTablePage = () => {\n    const [availableSeats, setAvailableSeats] = useState(0);\n    const [tables, setTables] = useState([]);\n\n    useEffect(() => {\n        // Fetch available seats from your backend API\n        const fetchAvailableSeats = async () => {\n            try {\n                const response = await axios.get('http://localhost:3001/api/v1/tables/tables');\n                setTables(response.data); // Assuming the response data is an array of tables\n                setAvailableSeats(response.data.filter(table => table.status === 'available').length);\n            } catch (error) {\n                console.error('Error fetching available seats:', error);\n            }\n        };\n\n        fetchAvailableSeats();\n    }, []);\n\n    const handleBookSeat = async (tableId) => {\n        try {\n            // Send a request to book the selected seat\n            await axios.patch(`http://localhost:3001/api/v1/tables/tables/${tableId}`, { status: 'reserved' });\n            // Update availableSeats locally\n            setAvailableSeats(availableSeats => availableSeats - 1);\n        } catch (error) {\n            console.error('Error booking seat:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Available Seats: {availableSeats}</h1>\n            <div>\n                {/* Create a \"Book\" button for each available seat */}\n                {tables.map(table => (\n                    table.status === 'available' && (\n                        <Button\n                            key={table._id}\n                            variant=\"contained\"\n                            onClick={() => handleBookSeat(table._id)}\n                        >\n                            Book Table {table.tableNumber}\n                        </Button>\n                    )\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default BookTablePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMW,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,4CAA4C,CAAC;QAC9EH,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;QAC1BN,iBAAiB,CAACI,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAK,WAAW,CAAC,CAACC,MAAM,CAAC;MACzF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAC3D;IACJ,CAAC;IAEDR,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,cAAc,GAAG,MAAOC,OAAO,IAAK;IACtC,IAAI;MACA;MACA,MAAMrB,KAAK,CAACsB,KAAK,CAAE,8CAA6CD,OAAQ,EAAC,EAAE;QAAEL,MAAM,EAAE;MAAW,CAAC,CAAC;MAClG;MACAT,iBAAiB,CAACD,cAAc,IAAIA,cAAc,GAAG,CAAC,CAAC;IAC3D,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;EAED,oBACIf,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,GAAI,mBAAiB,EAACjB,cAAc;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CxB,OAAA;MAAAoB,QAAA,EAEKf,MAAM,CAACoB,GAAG,CAACb,KAAK,IACbA,KAAK,CAACC,MAAM,KAAK,WAAW,iBACxBb,OAAA,CAACF,MAAM;QAEH4B,OAAO,EAAC,WAAW;QACnBC,OAAO,EAAEA,CAAA,KAAMV,cAAc,CAACL,KAAK,CAACgB,GAAG,CAAE;QAAAR,QAAA,GAC5C,aACc,EAACR,KAAK,CAACiB,WAAW;MAAA,GAJxBjB,KAAK,CAACgB,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CAEf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACtB,EAAA,CAjDID,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAmDnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}