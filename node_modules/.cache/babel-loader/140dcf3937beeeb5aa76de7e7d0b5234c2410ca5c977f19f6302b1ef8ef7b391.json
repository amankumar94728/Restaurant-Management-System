{"ast":null,"code":"var _jsxFileName = \"/Users/amankumar/Desktop/project04/src/components/restutrant/resturant_page/book_table.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookTablePage = () => {\n  _s();\n  const [availableSeats, setAvailableSeats] = useState(0);\n  useEffect(() => {\n    // Fetch available seats from your backend API\n    const fetchAvailableSeats = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/v1/tables/tables');\n        setAvailableSeats(response.data.length); // Assuming the response data is an array of tables\n      } catch (error) {\n        console.error('Error fetching available seats:', error);\n      }\n    };\n    fetchAvailableSeats();\n  }, []);\n  const handleBookSeat = async tableId => {\n    try {\n      // Send a request to book the selected seat\n      await axios.patch(`http://localhost:3001/api/v1/tables/tables/${tableId}`, {\n        status: 'reserved'\n      });\n      // Update availableSeats locally or fetch updated data\n      // Show a success message or redirect to a confirmation page\n    } catch (error) {\n      console.error('Error booking seat:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Available Seats: \", availableSeats]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [...Array(availableSeats).keys()].map(index => /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => handleBookSeat(index + 1),\n        children: [\"Book Table \", index + 1]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(BookTablePage, \"DgZp2IDrWj98cDMcCQC3i8Yrxuo=\");\n_c = BookTablePage;\nexport default BookTablePage;\nvar _c;\n$RefreshReg$(_c, \"BookTablePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Button","jsxDEV","_jsxDEV","BookTablePage","_s","availableSeats","setAvailableSeats","fetchAvailableSeats","response","get","data","length","error","console","handleBookSeat","tableId","patch","status","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","keys","map","index","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/amankumar/Desktop/project04/src/components/restutrant/resturant_page/book_table.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Button from '@mui/material/Button';\n\nconst BookTablePage = () => {\n    const [availableSeats, setAvailableSeats] = useState(0);\n\n    useEffect(() => {\n        // Fetch available seats from your backend API\n        const fetchAvailableSeats = async () => {\n            try {\n                const response = await axios.get('http://localhost:3001/api/v1/tables/tables');\n                setAvailableSeats(response.data.length); // Assuming the response data is an array of tables\n            } catch (error) {\n                console.error('Error fetching available seats:', error);\n            }\n        };\n\n        fetchAvailableSeats();\n    }, []);\n\n    const handleBookSeat = async (tableId) => {\n        try {\n            // Send a request to book the selected seat\n            await axios.patch(`http://localhost:3001/api/v1/tables/tables/${tableId}`, { status: 'reserved' });\n            // Update availableSeats locally or fetch updated data\n            // Show a success message or redirect to a confirmation page\n        } catch (error) {\n            console.error('Error booking seat:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Available Seats: {availableSeats}</h1>\n            <div>\n                {/* Create a \"Book\" button for each available seat */}\n                {[...Array(availableSeats).keys()].map((index) => (\n                    <Button variant=\"contained\" key={index} onClick={() => handleBookSeat(index + 1)}>\n                        Book Table {index + 1}\n                    </Button>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default BookTablePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,4CAA4C,CAAC;QAC9EH,iBAAiB,CAACE,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;MAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAC3D;IACJ,CAAC;IAEDL,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,cAAc,GAAG,MAAOC,OAAO,IAAK;IACtC,IAAI;MACA;MACA,MAAMhB,KAAK,CAACiB,KAAK,CAAE,8CAA6CD,OAAQ,EAAC,EAAE;QAAEE,MAAM,EAAE;MAAW,CAAC,CAAC;MAClG;MACA;IACJ,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;EAED,oBACIV,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,GAAI,mBAAiB,EAACb,cAAc;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CpB,OAAA;MAAAgB,QAAA,EAEK,CAAC,GAAGK,KAAK,CAAClB,cAAc,CAAC,CAACmB,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,KAAK,iBACzCxB,OAAA,CAACF,MAAM;QAAC2B,OAAO,EAAC,WAAW;QAAaC,OAAO,EAAEA,CAAA,KAAMd,cAAc,CAACY,KAAK,GAAG,CAAC,CAAE;QAAAR,QAAA,GAAC,aACnE,EAACQ,KAAK,GAAG,CAAC;MAAA,GADQA,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE9B,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAClB,EAAA,CAzCID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}